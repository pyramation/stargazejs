/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.14.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
import { ExecuteResult, SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
export interface AdminResponse {
    admin?: string | null;
    [k: string]: unknown;
}
export interface InstantiateMsg {
    admin?: string | null;
    marketplace_addr?: string | null;
    [k: string]: unknown;
}
export declare type Addr = string;
export interface MarketplaceResponse {
    marketplace?: Addr | null;
    [k: string]: unknown;
}
export interface ClaimInterface {
    contractAddress: string;
    sender: string;
    claimMintNft: ({ minterAddress }: {
        minterAddress: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    saleHook: (fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    updateAdmin: ({ admin }: {
        admin?: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    updateMarketplace: ({ marketplaceAddr }: {
        marketplaceAddr?: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
}
export declare class ClaimClient implements ClaimInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    claimMintNft: ({ minterAddress }: {
        minterAddress: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    saleHook: (fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    updateAdmin: ({ admin }: {
        admin?: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
    updateMarketplace: ({ marketplaceAddr }: {
        marketplaceAddr?: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;
}
